generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearchPostgres"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int       @id @default(autoincrement())
  email         String    @unique
  name          String?
  score         Int       @default(0)
  // OAuth specific fields
  provider      Provider  // тип провайдера (Google, Yandex)
  providerId    String    // ID пользователя у провайдера
  accessToken   String?   // токен доступа от провайдера
  refreshToken  String?   // токен обновления от провайдера
  tokenExpires  DateTime? // время истечения токена
  practices     Practice[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  @@unique([provider, providerId]) // Уникальный индекс для связки провайдер + providerId
}

enum Provider {
  GOOGLE
  YANDEX
}

model Word {
  id        Int        @id @default(autoincrement())
  word      String
  stress    Int        // Позиция ударения
  practices Practice[]
  type      PracticeType @default(STRESS)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

enum PracticeType {
  STRESS    // Практика ударений
  PARONYM   // Практика паронимов
}

model Practice {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  word      Word     @relation(fields: [wordId], references: [id])
  wordId    Int
  correct   Boolean
  createdAt DateTime @default(now())

  @@index([userId])
  @@index([wordId])
}
